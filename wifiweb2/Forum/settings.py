#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Django settings for Forum project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*p1cd*=$52s8d5e-zrm88d_23i!x#+isu8eix6w1yf9okm%-dj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    # 'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    'django.contrib.staticfiles',
    'Hotspot',
    'CheckPoint',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Forum.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(os.path.dirname(os.path.abspath(__file__)),'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Forum.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'wifi',
        'USER':'root',
        'PASSWORD':'youyouhei',
        'HOST':'127.0.0.1'
    }
}

# mongodb的配置
DB_MONGODB_USER = ''                                                    # MongoDB数据库账号
DB_MONGODB_PASSWORD = ''                                                 # MongoDB数据库密码
DB_MONGODB_NAME = 'wifi'                                               # MONGODB数据库名称
DB_MONGODB_HOST = '127.0.0.1'                                         # MongoDB数据库ip
DB_MONGODB_PORT = 27017                                                 # MongoDB数据库端口

if DB_MONGODB_HOST and DB_MONGODB_NAME and DB_MONGODB_PORT:
    import pymongo
    Client = pymongo.MongoClient(DB_MONGODB_HOST,DB_MONGODB_PORT)
    DB_MONGODB = Client[DB_MONGODB_NAME]
    if DB_MONGODB_USER and DB_MONGODB_PASSWORD:
        Client.admin.authenticate(DB_MONGODB_USER,DB_MONGODB_PASSWORD,mechanism='SCRAM-SHA-1')

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(os.path.dirname(__file__), 'static'),
)

#################################### 接口配置 #################################
API_WIFI_SEARCH ='https://116.205.4.18:60112/api/app/wifi/query/password'                               #WIFI密码查询API接口
API_BAIDU_LOCATION = 'http://api.map.baidu.com/geocoder/v2/?location=%s,%s&output=json&ak=%s&pois=1'    #百度地图定位API接口
API_WIFI_CRACK_STATUS ='https://116.205.4.18:60112/api/app/wifi/crack/status'                           #WIFI密码破解状态API接口
API_CRACK_CENTER_WEB = 'https://116.205.4.18:60112/api/cgi'                                             #WIFI破解服务器API接口
API_BAIDU_UPLOAD = 'http://api.map.baidu.com/geodata/v3/poi/upload'  # 百度批量上传数据接口
#################################### 其他配置 #################################
BAIDU_KEY = '5K3kPVyuMqBvZcinxZuLNWvwxiiN0Eyk'    # 百度开发者Key
WIFI_CRACK_KEY = '2ab2947702a8fe26dda6b860f0914ae4'
